package org.vadere.state.scenario;

import java.awt.geom.Rectangle2D;

/**
 * Geometry of a train generated by Traingen. Derive from this class to add a new train geometry.
 * The child class must implement all abstract methods and must provide a public default
 * constructor.
 *
 * <p>This class is used by
 *
 * <p>- Traingen (@link edu.hm.cs.vadere.seating.traingen.TrainBuilder) - VadereSimulator (@link
 * models.seating.SeatingModel)
 */
public abstract class TrainGeometry {

  public static final double X_OFFSET = 6;
  public static final double Y_OFFSET = 2;

  public abstract double getDoorWidth();

  public abstract double getEntranceAreaWidth();

  public abstract double getBenchWidth();

  public abstract double getDistanceBetweenFacingBenches();

  public abstract double getAisleWidth();

  public abstract double getAisleEntranceWidth();

  public abstract double getAisleLength();

  public final Rectangle2D getEntranceAreaRect(int index) {
    double w = getEntranceAreaWidth();
    double h = getTrainInteriorWidth();
    double x = index * (w + getAisleLength()) + X_OFFSET;
    double y = 0 + Y_OFFSET;
    return new Rectangle2D.Double(x, y, w, h);
  }

  public final Rectangle2D getCompartmentRect(int index) {
    double h = getTrainInteriorWidth();
    double w = getAisleLength();
    double x = getEntranceAreaWidth() + (index - 1) * (getEntranceAreaWidth() + w) + X_OFFSET;
    double y = 0 + Y_OFFSET;
    return new Rectangle2D.Double(x, y, w, h);
  }

  public final Rectangle2D getHalfCompartmentRect(int index, int subindex) {
    Rectangle2D compartment = getCompartmentRect(index);
    double w = compartment.getWidth() / 2;
    double x;
    if (subindex == 0) {
      x = compartment.getX();
    } else if (subindex == 1) {
      x = compartment.getX() + w;
    } else {
      throw new IllegalArgumentException("subindex must be 0 or 1.");
    }
    return new Rectangle2D.Double(x, compartment.getY(), w, compartment.getHeight());
  }

  public final double getSeatDepth() {
    return (getAisleLength() - 2 * getDistanceBetweenFacingBenches()) / 4;
  }

  public final double getTrainInteriorWidth() {
    return 2 * getBenchWidth() + getAisleWidth();
  }
}
